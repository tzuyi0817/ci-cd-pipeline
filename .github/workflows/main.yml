name: CI-Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  installDependencies:
    name: Install Dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
    
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 7.14.2
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      
      - uses: actions/cache@v2
        with:
          path: |
            ./node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-${{ hashFiles('**/pnpm-lock.yaml') }}-

      - name: Install Dependencies
        run: pnpm install

  lintTest:
    name: Lint
    runs-on: ubuntu-latest
    needs: [installDependencies]
    steps:
      - uses: actions/checkout@v3
      - name: Run Linting
        run: pnpm lint

  securityCheck:
    name: Security Check
    runs-on: ubuntu-latest
    needs: [installDependencies]
    steps:
      - name: Check for Security
        run: |
          echo "Running Security Checks... 0"
          sleep 5s;
          echo "Running Security Checks... 1"
          sleep 5s;
          echo "Running Security Checks... 2"
          sleep 5s;
          echo "Running Security Checks... 3"

  unitTest:
    name: Unit Test
    runs-on: ubuntu-latest
    needs: [installDependencies]
    steps:
      - uses: actions/checkout@v3
      - name: Run test
        run: pnpm test

  deploy:
    name: Deployment
    runs-on: ubuntu-latest
    needs: [lintTest, securityCheck, unitTest]
    steps:
      - uses: actions/checkout@v3
      - name: Run build
        run: pnpm build
